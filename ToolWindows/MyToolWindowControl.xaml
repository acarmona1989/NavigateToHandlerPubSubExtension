<UserControl
    x:Class="NavigateToHandlerPubSub.MyToolWindowControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
    xmlns:vsUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    x:Name="MyToolWindow"
    d:DesignHeight="300"
    d:DesignWidth="300"
    toolkit:Themes.UseVsTheme="True"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Left">
            <ComboBox
                x:Name="ContextCmb"
                Width="150"
                Margin="5"
                IsEditable="true"
                IsReadOnly="True"
                IsSynchronizedWithCurrentItem="True"
                ItemsSource="{Binding Context}"
                SelectedValue="{Binding SelectedItem}"
                SelectionChanged="ContextCmb_SelectionChanged"
                Visibility="Collapsed" />
        </Grid>

        <DataGrid
            Name="lvFiles"
            Grid.Row="1"
            Grid.Column="0"
            Margin="5"
            AutoGenerateColumns="False"
            Background="{DynamicResource {x:Static vsUI:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="True"
            CanUserResizeColumns="True"
            CanUserResizeRows="False"
            CanUserSortColumns="True"
            GridLinesVisibility="None"
            HeadersVisibility="Column"
            IsReadOnly="True"
            RowBackground="{DynamicResource {x:Static vsUI:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
            Visibility="Hidden">
            <DataGrid.Resources>
                <Style TargetType="DataGridRowHeader">
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsUI:EnvironmentColors.ToolWindowBackgroundBrushKey}}" />
                </Style>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="MinWidth" Value="40" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsUI:EnvironmentColors.CommandBarTextActiveBrushKey}}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static vsUI:HeaderColors.MouseOverBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsUI:EnvironmentColors.CommandBarTextHoverBrushKey}}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsUI:HeaderColors.SeparatorLineBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="DataGridRow">
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsUI:EnvironmentColors.CommandBarTextActiveBrushKey}}" />
                    <EventSetter Event="MouseLeftButtonUp" Handler="DataGridRow_MouseLeftButtonUp" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static vsUI:TreeViewColors.SelectedItemActiveBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsUI:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="" />
                <DataGridTextColumn Binding="{Binding FileName}" Header="File" />
                <DataGridTextColumn Binding="{Binding LineNumber}" Header="Line" />
                <DataGridTextColumn Binding="{Binding SourceFile}" Header="Path" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
